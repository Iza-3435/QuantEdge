version: '3.8'

services:
  # Main API service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: market-intelligence-api
    ports:
      - "8000:8000"
    environment:
      - CONFIG_PATH=/app/config/config.yaml
      - JWT_SECRET=${JWT_SECRET:-change-me-in-production}
      - ALPHA_VANTAGE_KEY=${ALPHA_VANTAGE_KEY}
      - REDIS_HOST=redis
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./mlruns:/app/mlruns
    depends_on:
      - redis
      - mlflow
    restart: unless-stopped
    networks:
      - market-intelligence

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: market-intelligence-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - market-intelligence

  # MLflow tracking server
  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: market-intelligence-mlflow
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlflow/mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_data:/mlflow
    command: mlflow server --host 0.0.0.0 --port 5000
    restart: unless-stopped
    networks:
      - market-intelligence

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: market-intelligence-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    networks:
      - market-intelligence

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: market-intelligence-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - market-intelligence

volumes:
  redis_data:
  mlflow_data:
  prometheus_data:
  grafana_data:

networks:
  market-intelligence:
    driver: bridge
